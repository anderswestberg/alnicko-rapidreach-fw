# Logging - temporarily use minimal mode to avoid MQTT log deadlock
CONFIG_LOG=y
CONFIG_LOG_DEFAULT_LEVEL=3
CONFIG_LOG_MODE_MINIMAL=y
CONFIG_LOG_RUNTIME_FILTERING=n
CONFIG_LOG_CMDS=n
CONFIG_LOG_SETTINGS=n

# Debugging - CPU exception info with debug-friendly optimization
CONFIG_DEBUG=y
CONFIG_DEBUG_INFO=y
CONFIG_THREAD_STACK_INFO=y
CONFIG_DEBUG_OPTIMIZATIONS=y
CONFIG_FAULT_DUMP=2
CONFIG_EXCEPTION_STACK_TRACE=y
CONFIG_ASSERT=y
CONFIG_ASSERT_VERBOSE=y
CONFIG_THREAD_NAME=y
CONFIG_DEBUG_THREAD_INFO=y
# tests <<<<<<

# JSON Support
CONFIG_JSON_LIBRARY=y

# HTTP Log Client (disable when using MQTT log client)
# CONFIG_HTTP_LOG_CLIENT is not set

# Increase network connection limits to prevent socket exhaustion
CONFIG_NET_MAX_CONN=16
CONFIG_NET_SOCKETS_POLL_MAX=8
CONFIG_RPR_MODULE_LED_LOG_LEVEL=3
CONFIG_RPR_MODULE_SWITCH_LOG_LEVEL=3
CONFIG_RPR_MODULE_POWEROFF_LOG_LEVEL=3
CONFIG_RPR_MODULE_CHARGER_LOG_LEVEL=3
CONFIG_RPR_MODULE_DEV_INFO_LOG_LEVEL=3
# CONFIG_RPR_MODULE_WATCHDOG_LOG_LEVEL=4
CONFIG_RPR_MODULE_BATTERY_LOG_LEVEL=3
CONFIG_RPR_MODULE_AUDIO_PLAYER_LOG_LEVEL=3
CONFIG_RPR_MODULE_MICRO_LOG_LEVEL=3
CONFIG_RPR_ETHERNET_LOG_LEVEL=3
CONFIG_RPR_MODEM_LOG_LEVEL=3
 # CONFIG_RPR_WIFI_LOG_LEVEL is not set
CONFIG_RPR_MODULE_HTTP_LOG_LEVEL=3
 # CONFIG_RPR_MODULE_DFU_LOG_LEVEL is not set
CONFIG_RPR_MODULE_MQTT_LOG_LEVEL=3
CONFIG_RPR_MQTT_CLIENT_WRAPPER=y

# Increase network buffers to prevent exhaustion
CONFIG_NET_PKT_RX_COUNT=30
CONFIG_NET_PKT_TX_COUNT=30
CONFIG_NET_BUF_RX_COUNT=60
CONFIG_NET_BUF_TX_COUNT=60

# Increase network thread stack sizes
CONFIG_NET_RX_STACK_SIZE=3072
CONFIG_NET_TX_STACK_SIZE=3072
CONFIG_NET_TCP_WORKQ_STACK_SIZE=2048

# Enable more aggressive cleanup
CONFIG_NET_BUF_POOL_USAGE=y
# MQTT Log Client
CONFIG_RPR_MQTT_LOG_CLIENT=n
# Temporarily disable to avoid logging deadlock during MQTT message processing
CONFIG_RPR_MQTT_LOG_BATCH_MAX=200
CONFIG_RPR_MQTT_LOG_BATCH_BYTES=2048
CONFIG_RPR_MQTT_LOG_FLUSH_INTERVAL_MS=500
CONFIG_RPR_MQTT_LOG_RAM_ENTRIES=16
CONFIG_RPR_MQTT_LOG_TOPIC_PREFIX="logs"
# MQTT auth for EMQX
CONFIG_RPR_MQTT_USERNAME="admin"
CONFIG_RPR_MQTT_PASSWORD="public"

# MQTT message size is handled by rx_buffer in mqtt_module.c
CONFIG_RPR_FILE_MANAGER_LOG_LEVEL=3
CONFIG_RPR_MODULE_RTC_LOG_LEVEL=3

CONFIG_LOG_INFO_COLOR_GREEN=y
# CONFIG_LOG_DBG_COLOR_BLUE=y

# For extra verbosity
# CONFIG_MODEM_CMUX_LOG_LEVEL_DBG=y
# CONFIG_MODEM_MODULES_LOG_LEVEL_DBG=y
# CONFIG_LOG_BUFFER_SIZE=65536
# CONFIG_NET_L2_PPP_LOG_LEVEL=y
CONFIG_NET_LOG=y
# CONFIG_WIFI_NRF70_BUS_LOG_LEVEL_DBG=y
# CONFIG_NRF70_UTIL=y
# CONFIG_NRF_WIFI_RPU_RECOVERY_DEBUG=y

# Zephyr Shell configuration
CONFIG_SHELL=y
CONFIG_SHELL_BACKENDS=y
CONFIG_SHELL_BACKEND_SERIAL=y
CONFIG_SHELL_BACKEND_RTT=n
# Enable MQTT shell backend for remote CLI access
CONFIG_SHELL_BACKEND_MQTT=y
CONFIG_SHELL_MQTT_SERVER_USERNAME="admin"
CONFIG_SHELL_MQTT_SERVER_PASSWORD="public"
CONFIG_SHELL_MQTT_LOG_LEVEL_INF=y
CONFIG_SHELL_CMD_BUFF_SIZE=128
CONFIG_SHELL_HISTORY=y
CONFIG_SHELL_HISTORY_BUFFER=256
CONFIG_SHELL_STACK_SIZE=4096
CONFIG_SHELL_PROMPT_UART="uart:~$ "

# MQTT Shell backend connection settings
CONFIG_SHELL_MQTT_SERVER_ADDR="192.168.2.79"
CONFIG_SHELL_MQTT_SERVER_PORT=1883
CONFIG_SHELL_BACKEND_MQTT_LOG_MESSAGE_QUEUE_SIZE=8
CONFIG_SHELL_BACKEND_MQTT_LOG_MESSAGE_QUEUE_TIMEOUT=1000

# Increase MQTT shell backend buffer sizes for longer command outputs
CONFIG_SHELL_MQTT_TX_BUF_SIZE=2048
CONFIG_SHELL_MQTT_RX_BUF_SIZE=512

# Prefer persistent session for MQTT shell backend so subscriptions survive reconnects
# (These Kconfigs depend on Zephyr version; set if available)
# CONFIG_SHELL_MQTT_CLEAN_SESSION=n
# CONFIG_SHELL_MQTT_SESSION_EXPIRY_INTERVAL=7200

# Network connection management and events (ensure link-change notifications)
CONFIG_NET_CONNECTION_MANAGER=y
CONFIG_NET_MGMT_EVENT=y

# Use newlib to avoid picolibc conflicts
CONFIG_NEWLIB_LIBC=y
CONFIG_PICOLIBC=n

# Reboot API for sys_reboot in examples
CONFIG_REBOOT=y

# Increase system workqueue stack to avoid sysworkq overflow
CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE=8192

# GitHub Device Registry Configuration
# NOTE: This implementation has some limitations:
# - Requires Base64 encoding for file content (not yet implemented)
# - Uses POST instead of PUT for creating files (GitHub API expects PUT)
# - Full implementation would benefit from a JSON library
# CONFIG_RPR_MODULE_DEVICE_REGISTRY=y
# DISABLED temporarily due to TLS certificate parsing errors causing restarts
# GitHub token should be set in prj-secrets.conf (see prj-secrets.conf.template)
# CONFIG_RPR_DEVICE_REGISTRY_GITHUB_TOKEN is set in prj-secrets.conf
CONFIG_RPR_DEVICE_REGISTRY_REPO_OWNER="enera-international"
CONFIG_RPR_DEVICE_REGISTRY_REPO_NAME="device-registry"
CONFIG_RPR_DEVICE_REGISTRY_PREFERRED_ID_LENGTH=6
CONFIG_RPR_MODULE_DEVICE_REGISTRY_LOG_LEVEL=4

# Enable HTTP/HTTPS support for GitHub API
CONFIG_RPR_MODULE_HTTP=y
CONFIG_RPR_ENABLE_HTTPS=y

# Enable initialization state machine
CONFIG_RPR_MODULE_INIT_SM=y
CONFIG_RPR_MODULE_INIT_SM_LOG_LEVEL=4

# TLS/SSL Configuration for GitHub API
CONFIG_MBEDTLS_HEAP_SIZE=65536
CONFIG_MBEDTLS_SSL_MAX_CONTENT_LEN=16384
CONFIG_NET_SOCKETS_TLS_MAX_CONTEXTS=4
CONFIG_MBEDTLS_ENABLE_HEAP=y
CONFIG_MBEDTLS_DEBUG=y

